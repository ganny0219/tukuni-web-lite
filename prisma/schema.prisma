// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                Int               @id @default(autoincrement())
  name              String            @unique
  buyPrice          Int
  sellPrice         Int
  stock             Int
  image             String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  sales             Sale[]
  purchase          Purchase[]
}

model Sale {
  id                Int               @id @default(autoincrement())
  productName       String            @default("")
  productId         Int               
  saleInvoiceId     Int
  buyPrice          Int
  sellPrice         Int
  quantity          Int
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  product           Product           @relation(fields: [productId], references: [id], onDelete: Cascade)
  saleInvoice       SaleInvoice       @relation(fields: [saleInvoiceId], references: [id], onDelete: Cascade)
}

model SaleInvoice {
  id                Int               @id @default(autoincrement())
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  sales             Sale[]
}

model Purchase {
  id                Int               @id @default(autoincrement())
  productName       String            @default("")
  productId         Int               
  purchaseInvoiceId Int
  price             Int
  quantity          Int
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  product           Product           @relation(fields: [productId], references: [id], onDelete: Cascade)
  purchaseInvoice   PurchaseInvoice   @relation(fields: [purchaseInvoiceId], references: [id], onDelete: Cascade)
}

model PurchaseInvoice {
  id                Int               @id @default(autoincrement())
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  puchases          Purchase[]
}